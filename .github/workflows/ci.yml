name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  build-and-test-linux:
    name: Build and Test (Linux, Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    env:
      CC: ccache gcc
      CXX: ccache g++
    strategy:
      matrix:
        python-version: ${{ fromJSON(vars.PYTHON_VERSIONS)}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}-python-${{ matrix.python-version }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache CMake build directory
        uses: actions/cache@v4
        with:
          path: |
            build
          key: ${{ runner.os }}-cmake-build-${{ hashFiles('**/CMakeLists.txt', '**/pyproject.toml') }}-python-${{ matrix.python-version }}
          restore-keys: |
            ${{ runner.os }}-cmake-build-

      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: |
            ~/.ccache
          key: ${{ runner.os }}-ccache-${{ hashFiles('**/pyproject.toml') }}-python-${{ matrix.python-version }}
          restore-keys: |
            ${{ runner.os }}-ccache-

      - name: Install system dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y build-essential cmake python3-dev pkg-config \
            libgmp-dev libmpfr-dev libeigen3-dev libcgal-dev libboost-dev ccache

      - name: Upgrade pip and install build tools
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install --upgrade scikit-build-core pybind11 cmake

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade numpy scipy pyvista pytest

      - name: Build and install package
        run: |
          python -m pip install -e .

      - name: Run pytest
        run: |
          pytest -q

  build-and-test-macos:
    name: Build and Test (macOS, Python ${{ matrix.python-version }})
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ${{ fromJSON(vars.PYTHON_VERSIONS)}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Caches/pip
          key: macos-pip-${{ hashFiles('**/pyproject.toml') }}-python-${{ matrix.python-version }}
          restore-keys: |
            macos-pip-

      - name: Cache CMake build directory
        uses: actions/cache@v4
        with:
          path: |
            build
          key: macos-cmake-build-${{ hashFiles('**/CMakeLists.txt', '**/pyproject.toml') }}-python-${{ matrix.python-version }}
          restore-keys: |
            macos-cmake-build-

      - name: Install system dependencies (Homebrew)
        run: |
          brew update || true
          brew install cmake eigen boost cgal ccache || true

      - name: Upgrade pip and install build tools
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install --upgrade scikit-build-core pybind11 cmake

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade numpy scipy pyvista pytest

      - name: Build and install package
        run: |
          python -m pip install -e .

      - name: Run pytest
        run: |
          pytest -q

  build-and-test-windows:
    name: Build and Test (Windows, Python ${{ matrix.python-version }})
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ${{ fromJSON(vars.PYTHON_VERSIONS)}}
    env:
      VCPKG_ROOT: C:\\vcpkg
      VCPKG_DEFAULT_TRIPLET: x64-windows
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: |
            %USERPROFILE%\\AppData\\Local\\pip\Cache
          key: windows-pip-${{ hashFiles('**/pyproject.toml') }}-python-${{ matrix.python-version }}
          restore-keys: |
            windows-pip-

      - name: Cache CMake build directory
        uses: actions/cache@v4
        with:
          path: |
            build
          key: windows-cmake-build-${{ hashFiles('**/CMakeLists.txt', '**/pyproject.toml') }}-python-${{ matrix.python-version }}
          restore-keys: |
            windows-cmake-build-

      - name: Cache vcpkg
        uses: actions/cache@v4
        with:
          path: |
            C:\\vcpkg
          key: windows-vcpkg-${{ hashFiles('**/pyproject.toml') }}-python-${{ matrix.python-version }}
          restore-keys: |
            windows-vcpkg-

      - name: Bootstrap vcpkg and install dependencies
        shell: pwsh
        run: |
          git clone --depth=1 https://github.com/microsoft/vcpkg "$env:VCPKG_ROOT"
          Push-Location $env:VCPKG_ROOT
          .\bootstrap-vcpkg.bat
          .\vcpkg.exe install cgal eigen3 boost-filesystem boost-system --triplet $env:VCPKG_DEFAULT_TRIPLET
          Pop-Location

      - name: Set VCPKG toolchain for CMake
        shell: pwsh
        run: |
          $toolchain = "$env:VCPKG_ROOT\\scripts\\buildsystems\\vcpkg.cmake"
          Write-Host "Setting CMAKE_TOOLCHAIN_FILE to $toolchain"
          Add-Content -Path $env:GITHUB_ENV -Value "CMAKE_TOOLCHAIN_FILE=$toolchain"

      - name: Upgrade pip and install build tools
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install --upgrade scikit-build-core pybind11 cmake

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade numpy scipy pyvista pytest

      - name: Build and install package (with vcpkg toolchain)
        shell: bash
        env:
          CMAKE_TOOLCHAIN_FILE: ${{ env.CMAKE_TOOLCHAIN_FILE }}
        run: |
          python -m pip install -e .

      - name: Run pytest
        run: |
          pytest -q
