name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  build-and-test:
    name: Build and Test (Ubuntu, Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ${{ fromJSON(vars.PYTHON_VERSIONS)}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}-python-${{ matrix.python-version }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache CMake build directory
        uses: actions/cache@v4
        with:
          path: |
            build
          key: ${{ runner.os }}-cmake-build-${{ hashFiles('**/CMakeLists.txt', '**/pyproject.toml') }}-python-${{ matrix.python-version }}
          restore-keys: |
            ${{ runner.os }}-cmake-build-

      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: |
            ~/.ccache
          key: ${{ runner.os }}-ccache-${{ hashFiles('**/pyproject.toml') }}-python-${{ matrix.python-version }}
          restore-keys: |
            ${{ runner.os }}-ccache-

      - name: Install system dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y build-essential cmake python3-dev pkg-config \
            libgmp-dev libmpfr-dev libeigen3-dev libcgal-dev libboost-dev ccache

      - name: Configure ccache
        run: |
          echo "Using ccache: $(ccache --version | head -n 1)"
          export CC='ccache gcc'
          export CXX='ccache g++'

      - name: Upgrade pip and install build tools
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install --upgrade scikit-build-core pybind11 cmake

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade numpy scipy pyvista pytest

      - name: Build and install package
        run: |
          python -m pip install -e .

      - name: Run pytest
        run: |
          pytest -q
